model$fit$ED2
model2$fit$ED2
roxygen2::roxygenise()
library(tvcure)
require(tvcure)
## Simulated data generation
beta = c(beta0=.4, beta1=-.2, beta2=.15) ; gam = c(gam1=.2, gam2=.2)
df.raw = simulateTVcureData(n=500, seed=123, beta=beta, gam=gam,
RC.dist="exponential",mu.cens=550)$df.raw
## TVcure model fitting
model = tvcure(~z1+z2+s(x1)+s(x2), ~z3+z4+s(x3)+s(x4), df=df.raw)
print(model)
plot(model)
plot(model, mfrow=c(1,2))
library(tvcure)
plot(model, mfrow=c(1,2))
library(tvcure)
model
library(tvcure)
model
library(tvcure)
model
library(tvcure)
model
model
library(tvcure)
additive(model)
additive.tvcure(model)
str(additive.tvcure(model))
names(additive.tvcure(model))
obj = additive.tvcure(model)
cat("Additive terms in long-term survival submodel:,obj$f1,\n")
cat("Additive terms in long-term survival submodel:",obj$f1,"\n")
cat("Additive terms in long-term survival submodel:\n") ; print(obj$f1)
AIC(fit)
AIC(model)
class(model)
AIC.tvcure(model)
AIC(model)
library(tvcure)
AIC(model)
levidence(tvcure)
levidence(model)
BIC(model)
obj = additive.tvcure(model)
names(obj)
names(obj$f1.grid)
names(obj$f1.grid$x1)
with(obj$f1.grid$x1, plotRegion(x=x,mat=y.mat))
with(obj$f1.grid$x1, plotRegion(x=x,mat=y.mat),xlab="x1",ylab="f(x1)")
with(obj$f1.grid$x1, plotRegion(x=x,mat=y.mat,xlab="x1",ylab="f(x1)"))
pat(mfrow=c(1,2))
par(mfrow=c(1,2))
with(obj$f1.grid$x1, plotRegion(x=x,mat=y.mat,xlab="x1",ylab="f(x1)"))
with(obj$f1.grid$x2, plotRegion(x=x,mat=y.mat,xlab="x2",ylab="f(x2)"))
par(mfrow=c(2,2))
with(obj$f1.grid$x1, plotRegion(x=x,mat=y.mat,xlab="x1",ylab="f(x1)"))
with(obj$f1.grid$x2, plotRegion(x=x,mat=y.mat,xlab="x2",ylab="f(x2)"))
with(obj$f2.grid$x1, plotRegion(x=x,mat=y.mat,xlab="x1",ylab="f(x1)"))
with(obj$f2.grid$x3, plotRegion(x=x,mat=y.mat,xlab="x1",ylab="f(x1)"))
with(obj$f2.grid$x4, plotRegion(x=x,mat=y.mat,xlab="x2",ylab="f(x2)"))
par(mfrow=c(1,2))
with(obj$f1.grid$x1, plotRegion(x=x,mat=y.mat,xlab="x1",ylab="f(x1)"))
with(obj$f1.grid$x2, plotRegion(x=x,mat=y.mat,xlab="x2",ylab="f(x2)"))
names(df.raw)
range(df.raw$time)
summary(df.raw)
df.new = subset(df.raw,id==1)
df.new
dim(df.new)
df.new = subset(df.raw,id==1)[,-3]
head(df.new)
df.new = subset(df.raw,id==1 | id==2)[,-3]
dim(df.new)
subset(df.raw,id==2)
subset(df.raw,id==3)
df.new = subset(df.raw,id==1 | id==3)[,-3]
dim(df.new)
pred = predict(model,df.new)
args(predict)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
library(tvcure)
AIC(model)
library(tvcure)
AIC(model)
AIC(model)
library(tvcure)
BIC(model)
plot(model)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(tvcure)
AIC
AIC.tvcure
q("no")
ls()
library(tvcure)
model
require(tvcure)
## Simulated data generation
beta = c(beta0=.4, beta1=-.2, beta2=.15) ; gam = c(gam1=.2, gam2=.2)
df.raw = simulateTVcureData(n=500, seed=123, beta=beta, gam=gam,
RC.dist="exponential",mu.cens=550)$df.raw
## TVcure model fitting
model = tvcure(~z1+z2+s(x1)+s(x2), ~z3+z4+s(x3)+s(x4), df=df.raw)
AIC(model)
AIC
BIC
BIC(model)
obj=predict(model)
obj=predict(model,df.new=df.raw)
names(obj)
with(subset(obj,id==1),pcure)
plotRegion(with(subset(obj,id==1),pcure))
plotRegion(mat=with(subset(obj,id==1),pcure))
plotRegion(1:300,mat=with(subset(obj,id==1),pcure))
plotRegion(1:275,mat=with(subset(obj,id==1),pcure))
plot(1:275,mat=with(subset(obj,id==1),pcure)[,1],type="l")
with(subset(obj,id==1),pcure)[,1]
plot(subset(obj,id==1),pcure)[,1]
subset(obj,id==1),pcure)
subset(obj,id==1)
head(subset(obj,id==1))
with(head(subset(obj,id==1)), plot(time,pcure.est,type="l"))
with(subset(obj,id==1), plot(time,pcure.est,type="l"))
names(subset(obj,id==1))
subset(obj,id==1)$pcure[,1]
plog(subset(obj,id==1)$pcure[,1])
plot(subset(obj,id==1)$pcure[,1])
plot(subset(obj,id==1)$Hp[,1])
library(tvcure)
library(tvcure)
BIC(model)
BIC
BIC.tvcure
library(tvcure)
AIC(model)
AIC.tvcure
mgcv::rig
?mgcv::rig
AIC
AIC(model)
AIC.tvcure
source("~/Myfiles/GitHub/tvcure/R/BIC.tvcure.R", echo=TRUE)
AIC
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
q("no")
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
beta = c(beta0=.4, beta1=-.2, beta2=.15) ; gam = c(gam1=.2, gam2=.2)
df.raw = simulateTVcureData(n=500, seed=123, beta=beta, gam=gam,
RC.dist="exponential",mu.cens=550)$df.raw
## TVcure model fitting
model = tvcure(~z1+z2+s(x1)+s(x2), ~z3+z4+s(x3)+s(x4), df=df.raw)
args(tvcure)
model$fit$beta0
model$fit$beta
model$fit$beta[,1]
model$fit$gamma[,1]
args(tvcure)
model1 = tvcure(~z1+z2+s(x1)+s(x2), ~z3+z4+s(x3)+s(x4), df=df.raw, beta.0=model$fit$beta[,1], phi.0=model$fit$phi,gamma.0=model$fit$gamma[,1])
model$fit$phi
model1 = tvcure(~z1+z2+s(x1)+s(x2), ~z3+z4+s(x3)+s(x4), df=df.raw, beta.0=model$fit$beta[,1], phi.0=model$fit$phi[,1],gamma.0=model$fit$gamma[,1])
mode(sample(1:30,10))
library(tvcure)
names(model)
AIC(model)
levidence(model)
BIC(model)
model
beta = c(beta0=.4, beta1=-.2, beta2=.15) ; gam = c(gam1=.2, gam2=.2)
df.raw = simulateTVcureData(n=500, seed=123, beta=beta, gam=gam,
RC.dist="exponential",mu.cens=550)$df.raw
## TVcure model fitting
model = tvcure(~z1+z2+s(x1)+s(x2), ~z3+z4+s(x3)+s(x4), df=df.raw)
obj = additive.tvcure(model) ## Extract additive terms
## Plot some of the fitted additive terms
## par(mfrow=c(1,2))
with(obj$f1.grid$x1, plotRegion(x=x,mat=y.mat,xlab="x1",ylab="f(x1)"))
with(obj$f1.grid$x2, plotRegion(x=x,mat=y.mat,xlab="x2",ylab="f(x2)"))
df.new = subset(df.raw,id==1 | id==3)[,-3]
pred = predict(model,df.new)
names(pred)
head(pred$pcure)
with(pred, plotRegion(time,pcure))
with(subset(pred,id==1), plotRegion(time,pcure))
with(subset(pred,id==1), plotRegion(time,pcure,ylim=c(0,1)))
with(subset(pred,id==1), plotRegion(time,Sp,ylim=c(0,1)))
with(subset(pred,id==1), plotRegion(time,lHp,ylim=c(0,1)))
with(subset(pred,id==1), plotRegion(time,lHp)
)
with(subset(pred,id==1), plotRegion(time,exp(-exp(lHp))))
with(subset(pred,id==1), plotRegion(time,exp(-Hp)))
with(subset(pred,id==1), plotRegion(time,Hp))
with(subset(pred,id==1), plotRegion(time,pcure))
with(subset(pred,id==2), plotRegion(time,pcure))
with(subset(pred,id==3), plotRegion(time,pcure))
with(subset(pred,id==3), plotRegion(time,pcure,ylim=c(0,1)))
with(subset(pred,id==1), plotRegion(time,pcure,ylim=c(0,1)))
with(subset(pred,id==1), plotRegion(20+time/12,pcure,ylim=c(0,1)))
with(subset(pred,id==3), plotRegion(20+time/12,pcure,ylim=c(0,1)))
with(subset(pred,id==1), plotRegion(20+time/12,pcure,ylim=c(0,1)))
df.new = subset(df.raw,id==1 | id==4)[,-3]
pred = predict(model,df.new)
with(subset(pred,id==4), plotRegion(20+time/12,pcure,ylim=c(0,1)))
names(pred)
with(subset(pred,id==1), plotRegion(time,Sp))
with(subset(pred,id==1), plotRegion(time,Sp,ylim=c(0,1),xlab="t",ylab="Sp(t)"))
par(mfrow=c(1,2))
with(subset(pred,id==1), plotRegion(time,Sp,ylim=c(0,1),xlab="t",ylab="Sp(t)"))
with(subset(pred,id==1), plotRegion(time,hp,ylim=c(0,1),xlab="t",ylab="hp(t)"))
with(subset(pred,id==1), plotRegion(time,Sp,ylim=c(0,1),xlab="t",ylab="Sp(t)"))
with(subset(pred,id==1), plotRegion(time,hp,xlab="t",ylab="hp(t)"))
with(subset(pred,id==1), plotRegion(time,Sp,main="Id=1",
ylim=c(0,1),xlab="t",ylab="Sp(t)",main))
with(subset(pred,id==1), plotRegion(time,Sp,main="Id=1",
ylim=c(0,1),xlab="t",ylab="Sp(t)"))
with(subset(pred,id==4), plotRegion(time,Sp,main="Id=4",
ylim=c(0,1),xlab="t",ylab="Sp(t)"))
pred = predict(model)
pred = predict(model,df.raw)
rm(pred)
roxygen2::roxygenise()
library(tvcure)
model1 = tvcure(~z1+z2+s(x1)+s(x2), ~z3+z4+s(x3)+s(x4), df=df.raw, beta.0=model$fit$beta[,1], phi.0=model$fit$phi,gamma.0=model$fit$gamma[,1])
debug(tvcure)
model1 = tvcure(~z1+z2+s(x1)+s(x2), ~z3+z4+s(x3)+s(x4), df=df.raw, beta.0=model$fit$beta[,1], phi.0=model$fit$phi,gamma.0=model$fit$gamma[,1])
phi.0
beta.0
model1 = tvcure(~z1+z2+s(x1)+s(x2), ~z3+z4+s(x3)+s(x4), df=df.raw, beta.0=model$fit$beta[,1], phi.0=model$fit$phi[,1],gamma.0=model$fit$gamma[,1])
K0
model1 = tvcure(~z1+z2+s(x1)+s(x2), ~z3+z4+s(x3)+s(x4), df=df.raw, beta.0=model$fit$beta[,1], phi.0=model$fit$phi[,1],gamma.0=model$fit$gamma[,1])
beta.0
model1 = tvcure(~z1+z2+s(x1)+s(x2), ~z3+z4+s(x3)+s(x4), df=df.raw, beta.0=model$fit$beta[,1], phi.0=model$fit$phi[,1],gamma.0=model$fit$gamma[,1])
regr1.lab
names(beta.0)
beta.0
K1
K1
model1 = tvcure(~z1+z2+s(x1)+s(x2), ~z3+z4+s(x3)+s(x4), df=df.raw, beta.0=model$fit$beta[,1], phi.0=model$fit$phi,gamma.0=model$fit$gamma[,1])
K1
beta.0
K2
K0
model1 = tvcure(~z1+z2+s(x1)+s(x2), ~z3+z4+s(x3)+s(x4), df=df.raw, beta.0=model$fit$beta[,1], phi.0=model$fit$phi[,1],gamma.0=model$fit$gamma[,1])
K0
K1
K2
regr1$K1
K1
names(regr1)
regr1$J
regr1$K
length(beta.0)
length(regr1.lab)
regr1$additive.lab
q1
length(beta.0)
beta.0
K1
library(tvcure)
model1 = tvcure(~z1+z2+s(x1)+s(x2), ~z3+z4+s(x3)+s(x4), df=df.raw, beta.0=model$fit$beta[,1], phi.0=model$fit$phi[,1],gamma.0=model$fit$gamma[,1])
model = tvcure(~z1+z2+s(x1)+s(x2), ~z3+z4+s(x3)+s(x4), df=df.raw)
model$fit$lambda1
model1 = tvcure(~z1+z2+s(x1)+s(x2), ~z3+z4+s(x3)+s(x4), df=df.raw, beta.0=model$fit$beta[,1], phi.0=model$fit$phi[,1],gamma.0=model$fit$gamma[,1],lambda1.0=model$fit$lambda1,lambda2.0=model$fit$lambda2)
model$fit$tau
model1 = tvcure(~z1+z2+s(x1)+s(x2), ~z3+z4+s(x3)+s(x4), df=df.raw, beta.0=model$fit$beta[,1], phi.0=model$fit$phi[,1],gamma.0=model$fit$gamma[,1],lambda1.0=model$fit$lambda1,lambda2.0=model$fit$lambda2,tau.0=model$fit$tau)
model1 = tvcure(~z1+z2+s(x1)+s(x2), ~z3+z4+s(x3)+s(x4), df=df.raw, beta.0=model$fit$beta[,1], phi.0=model$fit$phi[,1],gamma.0=model$fit$gamma[,1],lambda1.0=model$fit$lambda1,lambda2.0=model$fit$lambda2,tau.0=model$fit$tau)
model1 = tvcure(~z1+z2+s(x1)+s(x2), ~z3+z4+s(x3)+s(x4), df=df.raw,lambda1.0=model$fit$lambda1,lambda2.0=model$fit$lambda2,tau.0=model$fit$tau)
model$fit$tau
model$fit$lambda1
model$fit$lambda2
tau.0 = 2.58 ; lambda1.0 = c(285,15) ; lambda2.0 = c(25,1325)
model = tvcure(~z1+z2+s(x1)+s(x2), ~z3+z4+s(x3)+s(x4), df=df.raw,
tau.0=tau.0, lambda1.0=lambda1.0, lambda2.0=lambda2.0)
tau.0 = 2.5 ; lambda1.0 = c(285,15) ; lambda2.0 = c(25,1325)
## TVcure model fitting
model = tvcure(~z1+z2+s(x1)+s(x2), ~z3+z4+s(x3)+s(x4), df=df.raw,
tau.0=tau.0, lambda1.0=lambda1.0, lambda2.0=lambda2.0)
model
roxygen2::roxygenise()
library(tvcure)
plot(model)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
874,35-189,58
874.35-189.58
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
roxygen2::roxygenise()
library(tvcure)
roxygen2::roxygenise()
library(tvcure)
library(tvcure)
library(tvcure)
source("~/Dropbox/Myfiles/GitHub/tvcure/R/levidence.R", echo=TRUE)
## Simulated data generation
beta = c(beta0=.4, beta1=-.2, beta2=.15) ; gam = c(gam1=.2, gam2=.2)
df.raw = simulateTVcureData(n=500, seed=123, beta=beta, gam=gam,
RC.dist="exponential",mu.cens=550)$df.raw
## TVcure model fitting
tau.0 = 2.5 ; lambda1.0 = c(285,15) ; lambda2.0 = c(25,1325) ## Optional
model = tvcure(~z1+z2+s(x1)+s(x2), ~z3+z4+s(x3)+s(x4), df=df.raw,
tau.0=tau.0, lambda1.0=lambda1.0, lambda2.0=lambda2.0)
args(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
roxygen2::roxygenise()
library(tvcure)
library(tvcure)
roxygen2::roxygenise()
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
roxygen2::roxygenise()
library(tvcure)
roxygen2::roxygenise()
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
library(tvcure)
require(tvcure)
## Simulated data generation
beta = c(beta0=.4, beta1=-.2, beta2=.15) ; gam = c(gam1=.2, gam2=.2)
df.raw = simulateTVcureData(n=500, seed=123, beta=beta, gam=gam,
RC.dist="exponential",mu.cens=550)$df.raw
## TVcure model fitting
tau.0 = 2.7 ; lambda1.0 = c(40,15) ; lambda2.0 = c(25,70) ## Optional
model = tvcure(~z1+z2+s(x1)+s(x2), ~z3+z4+s(x3)+s(x4), df=df.raw,
tau.0=tau.0, lambda1.0=lambda1.0, lambda2.0=lambda2.0)
print(model)
plot(model, pages=1)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
roxygen2::roxygenise()
library(tvcure)
roxygen2::roxygenise()
library(tvcure)
roxygen2::roxygenise()
library(tvcure)
roxygen2::roxygenise()
library(tvcure)
library(tvcure)
roxygen2::roxygenise()
library(tvcure)
roxygen2::roxygenise()
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
library(tvcure)
